[{"/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/components/PurchasementGallery.js":"1","/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/lib/contractInteraction.js":"2","/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/lib/testTokenInteraction.js":"3","/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/components/Navbar.js":"4","/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/next.config.js":"5"},{"size":8598,"mtime":1679579771527,"results":"6","hashOfConfig":"7"},{"size":7251,"mtime":1682067525070,"results":"8","hashOfConfig":"7"},{"size":3304,"mtime":1682067402985,"results":"9","hashOfConfig":"7"},{"size":17889,"mtime":1679568781696,"results":"10","hashOfConfig":"7"},{"size":341,"mtime":1682067428858,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1eaovox",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/components/PurchasementGallery.js",["27"],[],"/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/lib/contractInteraction.js",[],[],"/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/lib/testTokenInteraction.js",[],[],"/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/components/Navbar.js",["28","29","30","31","32","33","34","35","36"],[],"/Users/simona/Documents/ArbeitCC/patchwork-kingdoms/web/next.config.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":58,"column":15,"nodeType":"39","endLine":64,"endColumn":6},{"ruleId":"37","severity":1,"message":"38","line":53,"column":15,"nodeType":"39","endLine":59,"endColumn":6},{"ruleId":"37","severity":1,"message":"38","line":61,"column":15,"nodeType":"39","endLine":79,"endColumn":6},{"ruleId":"37","severity":1,"message":"40","line":79,"column":8,"nodeType":"41","endLine":79,"endColumn":25,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":117,"column":45,"nodeType":"45","endLine":121,"endColumn":47},{"ruleId":"43","severity":1,"message":"44","line":158,"column":41,"nodeType":"45","endLine":158,"endColumn":108},{"ruleId":"46","severity":1,"message":"47","line":158,"column":41,"nodeType":"45","endLine":158,"endColumn":108},{"ruleId":"43","severity":1,"message":"44","line":178,"column":41,"nodeType":"45","endLine":182,"endColumn":43},{"ruleId":"43","severity":1,"message":"44","line":223,"column":45,"nodeType":"45","endLine":223,"endColumn":112},{"ruleId":"46","severity":1,"message":"47","line":223,"column":45,"nodeType":"45","endLine":223,"endColumn":112},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'library.eth.personal', 'library.utils', and 'mutateUser'. Either include them or remove the dependency array.","ArrayExpression",["48"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"49","fix":"50"},"Update the dependencies array to be: [active, account, library.eth.personal, library.utils, mutateUser]",{"range":"51","text":"52"},[7383,7400],"[active, account, library.eth.personal, library.utils, mutateUser]"]